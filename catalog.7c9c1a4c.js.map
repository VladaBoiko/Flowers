{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,8EAQAC,EAAAC,cAAcC,SAAU,EAOxB,MAAMC,EAAO,CACXC,aAAcC,SAASC,cAAc,kCACrCC,KAAMF,SAASC,cAAc,mBAC7BE,YAAaH,SAASC,cAAc,kBAGhCG,EAAc,CAClBC,SAAUP,EAAKK,YACfG,aAAc,GACdC,KAAM,EACNC,WAAY,EACZC,OAAQ,EACRC,QAAS,WAETC,gBACEC,KAAKL,MAAQ,C,EAGfM,YACED,KAAKL,KAAO,EACZK,KAAKN,aAAe,E,EAGtBQ,mBACE,IACE,MAAMC,QAAatB,EAAAuB,WAAWC,gBAAgBL,KAAKN,aAAcM,KAAKL,KAAMK,KAAKH,OAAQG,KAAKF,SAC9FE,KAAKJ,WAAaO,EAAKG,UACvB,MAAMC,GAAS,EAAAC,EAAAC,cAAaN,EAAKO,SAEjC,EAAAC,EAAAC,QAAO1B,EAAKK,YAAagB,GAErBP,KAAKL,MAAQK,KAAKJ,WACpBiB,EAAYC,QAEZD,EAAYE,SACZF,EAAYG,O,CAEd,MAAOC,GACPC,QAAQC,IAAI,8BAA+BF,E,IAkDjD/B,EAAKI,KAAK8B,QACV5B,EAAY6B,aAEZnC,EAAKC,aAAamC,iBAAiB,SAAS,KAC1C9B,EAAYS,aACZ,EAAAU,EAAAY,WAAUrC,EAAKK,aACfL,EAAKI,KAAK8B,QACV5B,EAAY6B,YAAY,IAa1BnC,EAAKI,KAAKgC,iBAAiB,UAAU,MACnC,EAAAX,EAAAY,WAAUrC,EAAKK,aACfC,EAAYS,YACZT,EAAYE,aApEd,WACE,MAAM8B,EAAa,CACjBC,SAAU,GACVC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNvC,KAAM,GACNwC,MAAO,IAkCT,MAhCA,IAAI5C,EAAKI,MAAMyC,KAAIC,IACjB,GAAoB,UAAhBA,EAAGC,UAAwBD,EAAGE,QAAS,CACzC,MAAMC,EAAQH,EAAGI,cAAcA,cAAcC,uBAAuBC,YAC9DC,EAAQP,EAAGQ,mBAAmBF,YAE9BG,GAAM,EAAAC,EAAAC,QAAOR,EAAOS,EAAAC,aACpBC,EAAsB,WAARL,GAA4B,SAARA,EAAiBM,OAAOC,SAAST,GAASA,EAElF,GAAY,UAARE,GACiC,IAAnCjB,EAAWiB,GAAKQ,QAAQV,IAAiBf,EAAWiB,GAAKS,KAAKJ,OACzD,CACL,MAAMhB,EAAQE,EAAGO,MAAMY,MAAM,KAE7B3B,EAAWiB,GAAOX,C,MAKMsB,OAAOC,QAAQ7B,GAAY8B,QAAO,CAACC,EAAKC,KACpE,IAAIrB,EAAQ,KAUZ,OARIqB,EAAK,GAAGC,OAAS,IAEjBtB,EADc,UAAZqB,EAAK,GACC,CAAE,CAACA,EAAK,IAAKA,EAAK,GAAGE,KAAK,MAE1B,CAAEC,SAAUH,EAAK,GAAG,GAAII,SAAUJ,EAAK,GAAG,KAI/CrB,EAAQ,IAAKoB,KAAQpB,GAAU,IAAKoB,EAAK,GAC/C,G,CA4BwBM,GAC3BrE,EAAY6B,YAAY,IAG1B,MAAMR,EAAc,CAClBiD,QAAS1E,SAASC,cAAc,iBAChC0E,UAAW,SACXC,UACEhE,KAAK8D,QAAQG,UAAW,C,EAE1BlD,SACEf,KAAK8D,QAAQG,UAAW,C,EAE1BnD,OACEd,KAAK8D,QAAQI,UAAUC,IAAInE,KAAK+D,U,EAElC/C,OACEhB,KAAK8D,QAAQI,UAAUE,OAAOpE,KAAK+D,U,GAIvClD,EAAYiD,QAAQxC,iBAAiB,SAAS,KAC5CT,EAAYmD,UACZxE,EAAYO,gBACZP,EAAY6B,cAEZ,EAAAqB,EAAA2B,cAAanF,EAAKK,YAAY","sources":["src/js/catalog-page.js"],"sourcesContent":["import { APIGetData } from './api/fetch-cards';\nimport { createMarkup } from './catalog/markup';\nimport { render, clearData } from './catalog/render';\nimport { filterWords } from './catalog/const';\nimport { smoothScroll } from './catalog/utils';\n\nimport { reviewsSwiper } from './reviews-slider';\n\nreviewsSwiper.enabled = true;\n\nimport { getKey } from './catalog/utils';\n\n// import throttle from 'lodash.throttle';\n// const DELAY = 300;\n\nconst refs = {\n  resetFormBtn: document.querySelector('.filter-catalog__clear-all-btn'),\n  form: document.querySelector('.filter-catalog'),\n  catalogList: document.querySelector('.catalog-list'),\n};\n\nconst catalogData = {\n  selector: refs.catalogList,\n  filterParams: {},\n  page: 1,\n  totalPages: 1,\n  offset: 9,\n  sorting: 'rating,1',\n\n  incrementPage() {\n    this.page += 1;\n  },\n\n  resetPage() {\n    this.page = 1;\n    this.filterParams = {};\n  },\n\n  async renderData() {\n    try {\n      const data = await APIGetData.getDataByFilter(this.filterParams, this.page, this.offset, this.sorting);\n      this.totalPages = data.totalPage;\n      const markup = createMarkup(data.result);\n\n      render(refs.catalogList, markup);\n\n      if (this.page >= this.totalPages) {\n        loadMoreBtn.hide();\n      } else {\n        loadMoreBtn.enable();\n        loadMoreBtn.show();\n      }\n    } catch (error) {\n      console.log('render data on catalog-page', error);\n    }\n  },\n};\n\nfunction getCheckedCheckBox() {\n  const filterData = {\n    category: [],\n    sort: [],\n    color: [],\n    amount: [],\n    size: [],\n    form: [],\n    price: [],\n  };\n  [...refs.form].map(el => {\n    if (el.nodeName === 'INPUT' && el.checked) {\n      const param = el.parentElement.parentElement.previousElementSibling.textContent;\n      const value = el.nextElementSibling.textContent;\n\n      const key = getKey(param, filterWords);\n      const valueFormat = key === 'amount' || key === 'size' ? Number.parseInt(value) : value;\n\n      if (key !== 'price') {\n        filterData[key].indexOf(value) === -1 && filterData[key].push(valueFormat);\n      } else {\n        const price = el.value.split(',');\n\n        filterData[key] = price;\n      }\n    }\n  });\n\n  const prepearedFilterParams = Object.entries(filterData).reduce((acc, item) => {\n    let param = null;\n\n    if (item[1].length > 0) {\n      if (item[0] !== 'price') {\n        param = { [item[0]]: item[1].join(',') };\n      } else {\n        param = { priseMin: item[1][0], priseMax: item[1][1] };\n      }\n    }\n\n    return param ? { ...acc, ...param } : { ...acc };\n  }, {});\n\n  return prepearedFilterParams;\n}\n\nrefs.form.reset();\ncatalogData.renderData();\n\nrefs.resetFormBtn.addEventListener('click', () => {\n  catalogData.resetPage();\n  clearData(refs.catalogList);\n  refs.form.reset();\n  catalogData.renderData();\n});\n\n// refs.form.addEventListener(\n//   'change',\n//   throttle(() => {\n//     clearData(refs.catalogList);\n//     catalogData.resetPage();\n//     catalogData.filterParams = getCheckedCheckBox();\n//     catalogData.renderData();\n//   }),\n//   DELAY\n// );\nrefs.form.addEventListener('change', () => {\n  clearData(refs.catalogList);\n  catalogData.resetPage();\n  catalogData.filterParams = getCheckedCheckBox();\n  catalogData.renderData();\n});\n\nconst loadMoreBtn = {\n  element: document.querySelector('.catalog__btn'),\n  className: 'hidden',\n  disable() {\n    this.element.disabled = true;\n  },\n  enable() {\n    this.element.disabled = false;\n  },\n  hide() {\n    this.element.classList.add(this.className);\n  },\n  show() {\n    this.element.classList.remove(this.className);\n  },\n};\n\nloadMoreBtn.element.addEventListener('click', () => {\n  loadMoreBtn.disable();\n  catalogData.incrementPage();\n  catalogData.renderData();\n\n  smoothScroll(refs.catalogList);\n});\n"],"names":["$aGajG","parcelRequire","$fov3b","reviewsSwiper","enabled","$6e86ff94da33463f$var$refs","resetFormBtn","document","querySelector","form","catalogList","$6e86ff94da33463f$var$catalogData","selector","filterParams","page","totalPages","offset","sorting","incrementPage","this","resetPage","async","data","APIGetData","getDataByFilter","totalPage","markup","$gBFI5","createMarkup","result","$eszG8","render","$6e86ff94da33463f$var$loadMoreBtn","hide","enable","show","error","console","log","reset","renderData","addEventListener","clearData","filterData","category","sort","color","amount","size","price","map","el","nodeName","checked","param","parentElement","previousElementSibling","textContent","value","nextElementSibling","key","$91JdT","getKey","$8MnzK","filterWords","valueFormat","Number","parseInt","indexOf","push","split","Object","entries","reduce","acc","item","length","join","priseMin","priseMax","$6e86ff94da33463f$var$getCheckedCheckBox","element","className","disable","disabled","classList","add","remove","smoothScroll"],"version":3,"file":"catalog.7c9c1a4c.js.map"}