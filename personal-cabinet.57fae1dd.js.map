{"mappings":"kpBAAA,IAAAA,EAAAC,EAAA,S,0BAKO,IAAIC,EAAQ,QAEnBF,EAAAG,KAAKC,UAAUC,iBAAiB,UAEhC,SAAwBC,GACpBA,EAAIC,iBACJP,EAAAG,KAAKK,eAAeC,OAEpB,MAAMC,EAAW,CAAEC,MAAO,KAAMC,SAAU,OAEtCC,UAAUF,MAAEA,EAAKC,SAAEA,IACnBN,EAAIQ,cAKR,GAHAJ,EAASC,MAAQA,EAAMI,MACvBL,EAASE,SAAWA,EAASG,MAET,KAAhBJ,EAAMI,OAAmC,KAAnBH,EAASG,MAE/B,YADA,EAAAC,EAAAC,eAAcjB,EAAAG,KAAKe,mBAAoB,kCAG3ClB,EAAAG,KAAKC,UAAUe,QAIZC,eAA8BC,GACjC,MAAMC,QAAY,EAAAC,EAAAC,OAAMH,GAGZ,MAARC,GAGA,EAAAN,EAAAC,eAAcjB,EAAAG,KAAKe,mBAAoB,wCAS3ClB,EAAAG,KAAKsB,aAAaC,UAAUC,IAAI,aAChC3B,EAAAG,KAAKyB,YAAYF,UAAUG,OAAO,cAIZC,EAHL9B,EAAAG,KAAK4B,KAAKL,WAITM,SAAS,eACvBF,EAAcD,OAAO,cAZrBI,aAAaC,QAAQhC,EAAOoB,EAAIa,QAIxC,IAM0BL,C,CAxBtBM,CAAe1B,E","sources":["src/js/auth/login.js"],"sourcesContent":["import { refs } from './helpers/refs';\nimport { logIn } from '../auth';\nimport { showAlertText } from './helpers/showAlertText';\n\n\nexport let TOKEN = 'token';\n\nrefs.loginForm.addEventListener('submit', onLoginSubmit);\n\nfunction  onLoginSubmit(evt) {\n    evt.preventDefault();\n    refs.loginSubmitBtn.blur();\n\n    const userInfo = { email: null, password: null };\n    const {\n        elements: { email, password }\n    } = evt.currentTarget;\n\n    userInfo.email = email.value;\n    userInfo.password = password.value;\n    \n    if (email.value === '' || password.value === '') {\n        showAlertText(refs.loginFormAlertText, 'Будь ласка, заповніть усі поля');\n        return;\n    }\n    refs.loginForm.reset();\n    handleLoginRes(userInfo);\n}\n\nexport async function handleLoginRes(userData) {\n    const res = await logIn(userData);\n// треба, щоб бек повнув значення поля name з регістрації\n    // console.log(res) //token\n    if (res === 401) {\n        // в консолі:\n        // POST https://server-flower.herokuapp.com/user/ 401 (Unauthorized)\n        showAlertText(refs.loginFormAlertText, 'Електронна пошта або пароль невірні');\n    } else {\n        // refs.profileForm.name.value =  //(data.name)\n        goToUserCab();\n        localStorage.setItem(TOKEN, res.token);\n    }\n}\n\nfunction goToUserCab() {\n    refs.loginSection.classList.add('is-hidden');\n    refs.personalCab.classList.remove('is-hidden');\n    closeIfModalOpen(refs.body.classList);\n}\n\nfunction closeIfModalOpen(bodyClasslist) {\n    if (bodyClasslist.contains('show-modal')) {\n        bodyClasslist.remove('show-modal');\n    }\n}\n\n// 401 \"user does not exist\"\n// else if (!res.isActivate) {\n//     console.log(\"please, check your email for confirm\");\n//     goToUserCab(evt); // <-⚠️прибери потім!!!\n//     localStorage.setItem(TOKEN, res.token); // <-⚠️прибери потім!!!\n// } "],"names":["$4l0Zb","parcelRequire","$85080d92b1bc24e0$export$c916c075a7028158","refs","loginForm","addEventListener","evt","preventDefault","loginSubmitBtn","blur","userInfo","email","password","elements","currentTarget","value","$bmnwh","showAlertText","loginFormAlertText","reset","async","userData","res","$euqRf","logIn","loginSection","classList","add","personalCab","remove","bodyClasslist","body","contains","localStorage","setItem","token","$85080d92b1bc24e0$export$2452d42fe06db888"],"version":3,"file":"personal-cabinet.57fae1dd.js.map"}