{"mappings":"wxBAEO,MAAMA,EAASC,EAFtBC,EAAA,UAE4BC,OAAO,CAC/BC,QAAS,6CAIAC,EAAQ,CACjBC,IAAIC,GACAP,EAAOQ,SAASC,QAAQC,OAAOC,cAAgB,UAAUJ,G,EAE7DK,QACIZ,EAAOQ,SAASC,QAAQC,OAAOC,cAAgB,E,GAK1CE,EAASC,MAAMC,IACxB,IAEI,aADuBf,EAAOgB,KAAK,UAAWD,E,CAEhD,MAAOE,GACL,OAAOA,EAAMC,SAASC,M,GAKjBC,EAAQN,MAAMC,IACvB,IACI,MAAMM,KAAEA,SAAerB,EAAOgB,KAAK,IAAKD,GAExC,OADAV,EAAMC,IAAIe,EAAKd,OACRc,C,CACT,MAAOJ,GACL,OAAOA,EAAMC,SAASC,M,GAKjBG,EAASR,UAClB,IACI,MAAMK,OAAEA,SAAiBnB,EAAOuB,IAAI,KAIpC,OAHe,MAAXJ,GACAd,EAAMO,QAEHO,C,CACT,MAAOF,GACL,OAAOA,EAAMC,SAASC,M,wCC9CvB,SAASK,EAAcC,EAAKC,GAC/BD,EAAIE,YAAcD,EAClBD,EAAIG,MAAMC,QAAU,EACpBC,YAAW,KACXL,EAAIG,MAAMC,QAAU,CAAC,GAClB,K,wDCLP,IAAAE,EAAA7B,EAAA,S,uCAKA6B,EAAAC,KAAKC,QAAQC,iBAAiB,UAE9B,SAAwBC,GACpBA,EAAIC,iBACJL,EAAAC,KAAKK,aAAaC,OAElB,MAAMC,EAAW,CACbC,KAAM,KACNC,MAAO,KACPC,SAAU,KACVC,gBAAiB,OAGjBC,UAAUJ,KAAEA,EAAIC,MAAEA,EAAKC,SAAEA,EAAQC,gBAAEA,IACnCR,EAAIU,cAOR,GALAN,EAASC,KAAOA,EAAKM,MACrBP,EAASE,MAAQA,EAAMK,MACvBP,EAASG,SAAWA,EAASI,MAC7BP,EAASI,gBAAkBA,EAAgBG,MAExB,KAAfN,EAAKM,OACW,KAAhBL,EAAMK,OACa,KAAnBJ,EAASI,OACiB,KAA1BH,EAAgBG,MAEhB,YADA,EAAAC,EAAAC,eAAcjB,EAAAC,KAAKiB,iBAAkB,kCAIzC,GAAIP,EAASI,QAAUH,EAAgBG,MAEnC,YADA,EAAAC,EAAAC,eAAcjB,EAAAC,KAAKiB,iBAAkB,2CAGzClB,EAAAC,KAAKC,QAAQiB,SACb,EAAAC,EAAAC,gBAIJtC,eAA+ByB,GAKf,YAJM,EAAAc,EAAAC,QAAOf,IAOrB,EAAAQ,EAAAC,eAAcjB,EAAAC,KAAKuB,UAAW,wCAE9B,EAAAR,EAAAC,eAAcjB,EAAAC,KAAKuB,UAAW,qD,CAblCC,CAAgBjB,E","sources":["src/js/auth.js","src/js/auth/helpers/showAlertText.js","src/js/auth/sign-up.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const server = axios.create({\n    baseURL: 'https://server-flower.herokuapp.com/user'\n})\n\n\nexport const token = {\n    set(token) {\n        server.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        server.defaults.headers.common.Authorization = '';\n    }\n}\n\n// Реєстрація\nexport const signUp = async body => {\n    try {\n        const response = await server.post('/signup', body);\n        return response;\n    } catch (error) {\n        return error.response.status;\n    }\n}\n\n// Авторизація\nexport const logIn = async body => {\n    try {\n        const { data } = await server.post('/', body);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        return error.response.status;\n    }\n}\n\n// Вихід\nexport const logOut = async () => {\n    try {\n        const { status } = await server.get('/');\n        if (status === 204) {\n            token.unset();\n        }\n        return status;\n    } catch (error) {\n        return error.response.status;\n    }\n}\n\n// Перевірка. Користувач авторизований? (токен дійсний чи ні?)\nexport const validate = async () => {\n    try {\n        const response = await server.get('/validate');\n        return response;\n    } catch (error) {\n        return error.response;\n    }\n}\n        ","export function showAlertText(ref, text) {\n    ref.textContent = text;\n    ref.style.opacity = 1;\n    setTimeout(() => {\n    ref.style.opacity = 0;\n    }, 2500);\n}","import { refs } from './helpers/refs';\nimport { signUp } from '../auth';\nimport { onCloseModal } from '../personal-cabinet/registration-modal';\nimport { showAlertText } from './helpers/showAlertText';\n    \nrefs.regForm.addEventListener('submit', onSignupSubmit)\n\nfunction onSignupSubmit(evt) {\n    evt.preventDefault();\n    refs.regSubmitBtn.blur();\n\n    const userInfo = {\n        name: null,\n        email: null,\n        password: null,\n        confirmPassword: null,\n    };\n    const {\n        elements: { name, email, password, confirmPassword}\n    } = evt.currentTarget;\n\n    userInfo.name = name.value;\n    userInfo.email = email.value;\n    userInfo.password = password.value;\n    userInfo.confirmPassword = confirmPassword.value;\n    \n    if (name.value === '' ||\n        email.value === '' ||\n        password.value === '' ||\n        confirmPassword.value === '') {\n        showAlertText(refs.regFormAlertText, 'Будь ласка, заповніть усі поля');\n        return;\n    }\n\n    if (password.value !== confirmPassword.value) {\n        showAlertText(refs.regFormAlertText, 'Паролі не співпадають, спробуйте ще раз');\n        return;\n    }\n    refs.regForm.reset();\n    onCloseModal();\n    handleSignUpRes(userInfo);\n}\n\nasync function handleSignUpRes(userInfo) {\n    const res = await signUp(userInfo);\n    // console.log(res)\n    // data/result/name\n    // тільки 2 вар. дії\n    if (res === 409) {\n        // в консолі:\n        // POST https://server-flower.herokuapp.com/user/signup 409 (Conflict)\n        showAlertText(refs.alertText, 'Такий користувач вже зареєстрований');\n    } else {\n        showAlertText(refs.alertText, 'Для продовження реєстрації, підтвердьте Вашу пошту');\n    }\n}\n// 409: \"Email in use\""],"names":["$8953c87b21bd174e$export$b4e470744154116f","$parcel$interopDefault","parcelRequire","create","baseURL","$8953c87b21bd174e$export$9e1725a4cfeada27","set","token","defaults","headers","common","Authorization","unset","$8953c87b21bd174e$export$cf64224bcd829024","async","body","post","error","response","status","$8953c87b21bd174e$export$dcb3afa56f3b80bd","data","$8953c87b21bd174e$export$464881f0a7cf0212","get","$3bc2ed5e2c157dd4$export$20a080a6d09179ae","ref","text","textContent","style","opacity","setTimeout","$gbvap","refs","regForm","addEventListener","evt","preventDefault","regSubmitBtn","blur","userInfo","name","email","password","confirmPassword","elements","currentTarget","value","$586JT","showAlertText","regFormAlertText","reset","$b6H2N","onCloseModal","$bMZn5","signUp","alertText","$e938be478c1afa94$var$handleSignUpRes"],"version":3,"file":"personal-cabinet.2eece7f1.js.map"}