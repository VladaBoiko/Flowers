{"mappings":"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","sources":["src/js/catalog-page.js","src/js/catalog/render.js"],"sourcesContent":["import { APIGetData } from './catalog/fetch-cards';\nimport { createMarkup, clearData } from './catalog/markup';\nimport { render } from './catalog/render';\nimport { handleFavorite } from './catalog/favoriteHandle';\nimport { handleWatchedHistory } from './catalog/handleWatchedHistory';\nimport { filterData, filterWords } from './catalog/filter';\n\nimport { reviewsSwiper } from './reviews-slider';\n\nreviewsSwiper.enabled = true;\n\n// import data from '../products.json';\n\nimport getKey from './catalog/getKey';\n\nconst refs = {\n  resetFormBtn: document.querySelector('.filter-catalog__clear-all-btn'),\n  form: document.querySelector('.filter-catalog'),\n  catalogList: document.querySelector('.catalog-list'),\n};\n\nconst catalogData = {\n  selector: refs.catalogList,\n  filterParams: {},\n  page: 1,\n  totalPages: 1,\n  offset: 9,\n  incrementPage() {\n    this.page += 1;\n  },\n  resetPage() {\n    this.page = 1;\n    this.filterParams = {};\n  },\n  async renderData() {\n    try {\n      const data = await APIGetData.getData();\n\n      const filteredData = filterData(data, this.filterParams);\n      filteredData.length <= this.offset && loadMoreBtn.hide();\n      this.totalPages = filteredData.length / this.offset;\n      const slicedData = sliceData(filteredData, this.page, this.offset);\n\n      const markup = createMarkup(slicedData);\n\n      render(refs.catalogList, markup);\n      handleFavorite();\n      handleWatchedHistory();\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n\nfunction getCheckedCheckBox() {\n  const filterData = {\n    category: [],\n    sort: [],\n    color: [],\n    amount: [],\n    size: [],\n    form: [],\n    price: [],\n  };\n  [...refs.form].map(el => {\n    if (el.nodeName === 'INPUT' && el.checked) {\n      const param = el.parentElement.parentElement.previousElementSibling.textContent;\n      const value = el.nextElementSibling.textContent;\n\n      const key = getKey(param, filterWords);\n      const valueFormat = key === 'amount' || key === 'size' ? Number.parseInt(value) : value;\n      filterData[key].indexOf(value) === -1 && filterData[key].push(valueFormat);\n    }\n  });\n  return filterData;\n}\n\nrefs.form.reset();\ncatalogData.renderData();\n\nrefs.resetFormBtn.addEventListener('click', () => {\n  catalogData.resetPage();\n  clearData(refs.catalogList);\n  refs.form.reset();\n  loadMoreBtn.show();\n  loadMoreBtn.enable();\n  catalogData.renderData();\n});\n\nrefs.form.addEventListener('change', () => {\n  clearData(refs.catalogList);\n\n  catalogData.resetPage();\n  catalogData.filterParams = getCheckedCheckBox();\n  catalogData.renderData();\n});\n\nconst loadMoreBtn = {\n  element: document.querySelector('.catalog__btn'),\n  className: 'hidden',\n  disable() {\n    this.element.disabled = true;\n  },\n  enable() {\n    this.element.disabled = false;\n  },\n  hide() {\n    this.element.classList.add(this.className);\n  },\n  show() {\n    this.element.classList.remove(this.className);\n  },\n};\n\nloadMoreBtn.element.addEventListener('click', () => {\n  loadMoreBtn.disable();\n  catalogData.incrementPage();\n  catalogData.renderData();\n  if (catalogData.page >= catalogData.totalPages) {\n    loadMoreBtn.hide();\n  } else {\n    loadMoreBtn.enable();\n  }\n});\n\nfunction sliceData(data, page, offset) {\n  const totalPages = data.length / offset;\n  const start = page * offset - offset;\n  const end = start + offset;\n  console.log('start', start, 'end', end, 'page', page, 'totalPages', totalPages);\n  if (data.length > offset) {\n    if (page < totalPages) {\n      return data.slice(start, end);\n    }\n    return data.slice(start);\n  }\n  return data;\n}\n","export const render = (selector, markup) => {\n  selector.insertAdjacentHTML('beforeend', markup);\n};\n"],"names":["$3zrJA","parcelRequire","$9b3785105e9d69b8$export$b3890eb0ae9dca99","selector","markup","insertAdjacentHTML","$g0iWm","reviewsSwiper","enabled","$af784749f7559fe0$var$refs","resetFormBtn","document","querySelector","form","catalogList","$af784749f7559fe0$var$catalogData","filterParams","page","totalPages","offset","incrementPage","this","resetPage","async","data","APIGetData","getData","filteredData","$iDd0l","filterData","length","$af784749f7559fe0$var$loadMoreBtn","hide","slicedData","start","end","console","log","slice","$af784749f7559fe0$var$sliceData","$jwgDc","createMarkup","$dynyT","handleFavorite","$7qU2l","handleWatchedHistory","error","reset","renderData","addEventListener","clearData","show","enable","category","sort","color","amount","size","price","map","el","nodeName","checked","param","parentElement","previousElementSibling","textContent","value","nextElementSibling","key","$6bmen","default","filterWords","valueFormat","Number","parseInt","indexOf","push","$af784749f7559fe0$var$getCheckedCheckBox","element","className","disable","disabled","classList","add","remove"],"version":3,"file":"catalog.8b063d17.js.map"}