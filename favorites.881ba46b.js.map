{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aCAAC,EAAAD,EAAA,SCAAC,EAAAD,EAAA,SCGO,MAAME,EAAS,CAACC,EAAUC,KAC/BD,EAASE,mBAAmB,YAAaD,GFEpBE,SAASC,iBAAiB,sBAElCC,SAAQC,GACnBA,EAAYC,iBAAiB,SAASC,IACpCA,EAAMC,iBACN,MAAMC,EAAYJ,EAAYK,QAAQ,YAAYC,GAElD,GAAIF,EAAW,CACbJ,EAAYO,UAAUC,OAAO,WAE7B,MAAMC,GAAe,EAAAjB,EAAAkB,sBAbjB,aAcJ,IAAIC,EAAa,KAEjB,IAAKF,IAAiBG,MAAMC,QAAQJ,GAGlC,OAFAE,EAAa,CAACP,QACd,EAAAZ,EAAAsB,oBAlBE,YAkBsBH,GAI1B,IAAwC,IAApCF,EAAaM,QAAQX,GAGvB,OAFAO,EAAa,IAAIF,EAAcL,QAC/B,EAAAZ,EAAAsB,oBAxBE,YAwBsBH,GAG1B,GAAIF,EAAaM,QAAQX,IAAa,EAOpC,OANAO,EAAaF,EAAaO,QAAOC,GAASA,IAAUb,KACpD,EAAAZ,EAAAsB,oBA7BE,YA6BsBH,SAEnBX,EAAYO,UAAUW,SAAS,YAAcrB,SAASsB,cAAc,oB,OC5BhEtB,SAASC,iBAAiB,YAElCC,SAAQqB,GACfA,EAAQnB,iBAAiB,SAASoB,IAEhC,MAAMC,EAAYF,EAAQd,GAW1B,IAR8B,QAAxBe,EAAIE,OAAOC,UAA8C,QAAxBH,EAAIE,OAAOC,WAC5CH,EAAIE,OAAOlB,QAAQ,uBACrBgB,EAAIE,OAAOhB,UAAUW,SAAS,uBAGhC,EAAA1B,EAAAsB,oBAhBc,gBAgBoBQ,GAGhCA,EAAW,CACb,MAAMG,GAAY,EAAAjC,EAAAkB,sBArBd,kBAuBJ,GAAKe,GAGuC,IAAjCA,EAAUV,QAAQO,KAC3BG,EAAUC,KAAKJ,IACf,EAAA9B,EAAAsB,oBA5BE,iBA4BsBW,QALV,CACd,MAAME,EAAU,CAACL,IACjB,EAAA9B,EAAAsB,oBAzBE,iBAyBsBa,E,OCrBV,EAGXC,EAAYC,IACvBA,EAAKC,UAAY,EAAE,E,cHHd,WACL,GAAIjC,SAASsB,cAAc,oBAAqB,CAC9C,MAAMY,EAAO,CACXC,aAAcnC,SAASsB,cAAc,yBACrCc,IAAKpC,SAASsB,cAAc,sBAC5BU,KAAMhC,SAASsB,cAAc,sBAGzBe,GAA+B,EAAA1C,EAAAkB,sBAAqB,aAGvDwB,GACuC,IAAxCA,EAA6BC,QAC5BvB,MAAMC,QAAQqB,IAUfH,EAAKC,aAAaI,SAAS,GAAGC,YAAc,SAC5CN,EAAKE,IAAII,YAAc,oBACvBN,EAAKE,IAAIK,KAAO,kBAChB,EAAA9C,EAAA+C,UAASR,EAAKC,aAAaI,SAAS,GAAI,WACxC,EAAA5C,EAAA+C,UAASR,EAAKE,IAAK,+BAKrBO,iBACE,IACE,MAAMC,QAAanD,EAAAoD,WAAWC,YAAYT,EAA6BU,KAAK,MACtEjD,GAAS,EAAAkD,EAAAC,cAAaL,GAC5Bb,EAAUG,EAAKF,MACfpC,EAAOsC,EAAKF,KAAMlC,E,CAClB,MAAOoD,GACPC,QAAQC,IAAIF,E,EAVdG,KAdAtB,EAAUG,EAAKF,MAEfE,EAAKC,aAAaI,SAAS,GAAGC,YAAc,iCAC5CN,EAAKE,IAAII,YAAc,qBACvBN,EAAKE,IAAIK,KAAO,gBAChB,EAAA9C,EAAA2D,aAAYpB,EAAKC,aAAaI,SAAS,GAAI,WAC3C,EAAA5C,EAAA2D,aAAYpB,EAAKE,IAAK,+B,EAvB5BmB","sources":["src/js/favorite-page.js","src/js/catalog/handleFavorite.js","src/js/catalog/handleWatchedHistory.js","src/js/catalog/render.js"],"sourcesContent":["import { APIGetData } from './api/fetch-cards';\nimport { createMarkup } from './catalog/markup';\nimport { render, clearData } from './catalog/render';\nimport { addClass, removeClass, loadFromLocalStorage } from './catalog/utils';\n\nloadDataFavoritePage();\n\nexport function loadDataFavoritePage() {\n  if (document.querySelector('.favorites.offer')) {\n    const refs = {\n      titleWrapper: document.querySelector('.offer__title-wrapper'),\n      btn: document.querySelector('.favorites__button'),\n      list: document.querySelector('.offer__list--fav'),\n    };\n\n    const favotireListFromLocalStorage = loadFromLocalStorage('Favorites');\n\n    if (\n      !favotireListFromLocalStorage ||\n      favotireListFromLocalStorage.length === 0 ||\n      !Array.isArray(favotireListFromLocalStorage)\n    ) {\n      clearData(refs.list);\n\n      refs.titleWrapper.children[0].textContent = 'В обраному поки що нічого нема';\n      refs.btn.textContent = 'Перейти на головну';\n      refs.btn.href = './index.html';\n      removeClass(refs.titleWrapper.children[1], 'hidden');\n      removeClass(refs.btn, 'favorites__button--centered');\n    } else {\n      refs.titleWrapper.children[0].textContent = 'Обране';\n      refs.btn.textContent = 'Перейти в каталог';\n      refs.btn.href = './catalog.html';\n      addClass(refs.titleWrapper.children[1], 'hidden');\n      addClass(refs.btn, 'favorites__button--centered');\n\n      renderData();\n    }\n\n    async function renderData() {\n      try {\n        const data = await APIGetData.getDataByID(favotireListFromLocalStorage.join(','));\n        const markup = createMarkup(data);\n        clearData(refs.list);\n        render(refs.list, markup);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n}\n","import { saveToLocalStorage, loadFromLocalStorage } from './utils';\n// import { loadDataFavoritePage } from '../favorite-page';\n\nconst key = 'Favorites';\n\nexport function handleFavorite() {\n  const favoriteBtns = document.querySelectorAll('.product__favorite');\n\n  favoriteBtns.forEach(favoriteBtn =>\n    favoriteBtn.addEventListener('click', event => {\n      event.preventDefault();\n      const productID = favoriteBtn.closest('.product').id;\n\n      if (productID) {\n        favoriteBtn.classList.toggle('checked');\n\n        const savedListFav = loadFromLocalStorage(key);\n        let newListFav = null;\n\n        if (!savedListFav || !Array.isArray(savedListFav)) {\n          newListFav = [productID];\n          saveToLocalStorage(key, newListFav);\n          return;\n        }\n\n        if (savedListFav.indexOf(productID) === -1) {\n          newListFav = [...savedListFav, productID];\n          saveToLocalStorage(key, newListFav);\n          return;\n        }\n        if (savedListFav.indexOf(productID) > -1) {\n          newListFav = savedListFav.filter(favId => favId !== productID);\n          saveToLocalStorage(key, newListFav);\n\n          if (!favoriteBtn.classList.contains('checked') && document.querySelector('.favorites.offer')) {\n            // loadDataFavoritePage();\n          }\n          return;\n        }\n      }\n    })\n  );\n}\n","import { saveToLocalStorage, loadFromLocalStorage } from './utils';\n\nconst key = 'EarlierWatched';\nconst currentCardId = 'CurrentCardID';\n\nexport function handleWatchedHistory() {\n  const products = document.querySelectorAll('.product');\n\n  products.forEach(product =>\n    product.addEventListener('click', evt => {\n      // event.preventDefault();\n      const productId = product.id;\n      if (\n        !(\n          ((evt.target.nodeName === 'svg' || evt.target.nodeName === 'use') &&\n            evt.target.closest('.product__favorite')) ||\n          evt.target.classList.contains('product__favorite')\n        )\n      ) {\n        saveToLocalStorage(currentCardId, productId);\n      }\n\n      if (productId) {\n        const savedList = loadFromLocalStorage(key);\n\n        if (!savedList) {\n          const newList = [productId];\n          saveToLocalStorage(key, newList);\n        } else if (savedList.indexOf(productId) === -1) {\n          savedList.push(productId);\n          saveToLocalStorage(key, savedList);\n        }\n      }\n    })\n  );\n}\n","import { handleFavorite } from './handleFavorite';\nimport { handleWatchedHistory } from './handleWatchedHistory';\n\nexport const render = (selector, markup) => {\n  selector.insertAdjacentHTML('beforeend', markup);\n  handleFavorite();\n  handleWatchedHistory();\n};\n\nexport const clearData = list => {\n  list.innerHTML = '';\n};\n"],"names":["$aGajG","parcelRequire","$91JdT","$a86f5b377b8c9f1d$export$b3890eb0ae9dca99","selector","markup","insertAdjacentHTML","document","querySelectorAll","forEach","favoriteBtn","addEventListener","event","preventDefault","productID","closest","id","classList","toggle","savedListFav","loadFromLocalStorage","newListFav","Array","isArray","saveToLocalStorage","indexOf","filter","favId","contains","querySelector","product","evt","productId","target","nodeName","savedList","push","newList","$a86f5b377b8c9f1d$export$ec21c014cef0b1e8","list","innerHTML","refs","titleWrapper","btn","favotireListFromLocalStorage","length","children","textContent","href","addClass","async","data","APIGetData","getDataByID","join","$gBFI5","createMarkup","error","console","log","renderData","removeClass","$1c0bffe6411de2f6$export$99af6473500b69df"],"version":3,"file":"favorites.881ba46b.js.map"}